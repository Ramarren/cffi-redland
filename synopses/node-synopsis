librdf_node*        librdf_new_node                     (librdf_world *world);
librdf_node*        librdf_new_node_from_uri_string     (librdf_world *world,
                                                         unsigned char *uri_string);
librdf_node*        librdf_new_node_from_uri            (librdf_world *world,
                                                         librdf_uri *uri);
librdf_node*        librdf_new_node_from_uri_local_name (librdf_world *world,
                                                         librdf_uri *uri,
                                                         unsigned char *local_name);
librdf_node*        librdf_new_node_from_normalised_uri_string
                                                        (librdf_world *world,
                                                         unsigned char *uri_string,
                                                         librdf_uri *source_uri,
                                                         librdf_uri *base_uri);
librdf_node*        librdf_new_node_from_literal        (librdf_world *world,
                                                         unsigned char *string,
                                                         const char *xml_language,
                                                         int is_wf_xml);
librdf_node*        librdf_new_node_from_typed_literal  (librdf_world *world,
                                                         unsigned char *value,
                                                         const char *xml_language,
                                                         librdf_uri *datatype_uri);
librdf_node*        librdf_new_node_from_typed_counted_literal
                                                        (librdf_world *world,
                                                         unsigned char *value,
                                                         size_t value_len,
                                                         const char *xml_language,
                                                         size_t xml_language_len,
                                                         librdf_uri *datatype_uri);
librdf_node*        librdf_new_node_from_blank_identifier
                                                        (librdf_world *world,
                                                         unsigned char *identifier);
librdf_node*        librdf_new_node_from_node           (librdf_node *node);
void                librdf_free_node                    (librdf_node *node);
librdf_uri*         librdf_node_get_uri                 (librdf_node *node);
librdf_node_type    librdf_node_get_type                (librdf_node *node);
unsigned char*      librdf_node_get_literal_value       (librdf_node *node);
unsigned char*      librdf_node_get_literal_value_as_counted_string
                                                        (librdf_node *node,
                                                         size_t *len_p);
char*               librdf_node_get_literal_value_as_latin1
                                                        (librdf_node *node);
char*               librdf_node_get_literal_value_language
                                                        (librdf_node *node);
int                 librdf_node_get_literal_value_is_wf_xml
                                                        (librdf_node *node);
librdf_uri*         librdf_node_get_literal_value_datatype_uri
                                                        (librdf_node *node);
int                 librdf_node_get_li_ordinal          (librdf_node *node);
unsigned char*      librdf_node_get_blank_identifier    (librdf_node *node);
int                 librdf_node_is_resource             (librdf_node *node);
int                 librdf_node_is_literal              (librdf_node *node);
int                 librdf_node_is_blank                (librdf_node *node);
size_t              librdf_node_encode                  (librdf_node *node,
                                                         unsigned char *buffer,
                                                         size_t length);
librdf_node*        librdf_node_decode                  (librdf_world *world,
                                                         size_t *size_p,
                                                         unsigned char *buffer,
                                                         size_t length);
unsigned char*      librdf_node_to_string               (librdf_node *node);
unsigned char*      librdf_node_to_counted_string       (librdf_node *node,
                                                         size_t *len_p);
void                librdf_node_print                   (librdf_node *node,
                                                         FILE *fh);
int                 librdf_node_equals                  (librdf_node *first_node,
                                                         librdf_node *second_node);
librdf_iterator*    librdf_node_static_iterator_create  (librdf_node **nodes,
                                                         int size);
